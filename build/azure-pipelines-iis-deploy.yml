trigger: none

pr: none

variables:
  - name: BuildConfiguration
    value: 'Release'
  - name: BuildPlatform
    value: 'AnyCPU'
  - name: Solution
    value: 'NetFrameworkDeployIIS/NetFrameworkDeployIIS.csproj'
  - name: IISSiteName
    value: 'iisdeploy'
  - name: IISPhysicalPath
    value: '%SystemDrive%\inetpub\wwwroot\$(IISSiteName)'
  - name: ConnectionStrings.DefaultConnection
    value: 'Server=localhost,1433;Database=MANGO_PROD;User Id=sa;Password=x2yiJt!Fs;TrustServerCertificate=true;'
  - name: CertThumbprint
    value: 'a2f8cf7530768f203c5290ffaac4b15f20626285'
  - name: HostName
    value: 'mangomessenger.company'
stages:
  - stage: 'Build_Test_Package'
    displayName: 'Build/Test/Package'
    jobs:
      - job: 'Build'
        displayName: 'Build and test'
        pool:
          vmImage: 'windows-latest'
        steps:
          - checkout: self
            fetchDepth: 0

          - task: gitversion/setup@0
            displayName: 'GitVersion Setup'
            inputs:
              versionSpec: '5.9.x'

          - task: gitversion/execute@0
            displayName: 'GitVersion Execute'
            inputs:
              updateAssemblyInfo: true

          - bash: echo $Action$BuildVersion
            displayName: 'Set Build Version Number'
            env:
              Action: '##vso[build.updatebuildnumber]'
              BuildVersion: $(GitVersion.SemVer)

          - task: NuGetToolInstaller@1
            displayName: 'Use NuGet'
            inputs:
              checkLatest: true

          - task: NuGetCommand@2
            displayName: 'NuGet restore'
            inputs:
              restoreSolution: NetFrameworkDeployIIS.sln

          - task: VSBuild@1
            displayName: 'Build $(Solution) $(BuildConfiguration)'
            inputs:
              solution: '$(Solution)'
              msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)" /p:AutoParameterizationWebConfigConnectionStrings=false'
              platform: '$(BuildPlatform)'
              configuration: '$(BuildConfiguration)'

          - task: PublishSymbols@2
            displayName: 'Publish symbols path'
            inputs:
              SearchPattern: '**\bin\**\*.pdb'
              PublishSymbols: false
            enabled: false
            continueOnError: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: drop'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  - stage: 'dev'
    displayName: 'WebApp Deploy DEV'
    dependsOn: Build_Test_Package
    condition: succeeded('Build_Test_Package')
    jobs:
      - deployment: deploymentJob
        displayName: Deployment Job
        environment:
          name: dev
          resourceType: VirtualMachine

        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                  
                - task: PowerShell@2
                  displayName: 'Delete SSL Cert If Exists'
                  inputs:
                    targetType: 'inline'
                    script: |
                      netsh http delete sslcert hostnameport=mangomessenger.company:443
                  continueOnError: true

                - task: IISWebAppManagementOnMachineGroup@0
                  displayName: 'IIS Web App Manage'
                  inputs:
                    IISDeploymentType: 'IISWebsite'
                    ActionIISWebsite: 'CreateOrUpdateWebsite'
                    WebsiteName: '$(IISSiteName)'
                    WebsitePhysicalPath: '$(IISPhysicalPath)'
                    WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                    DotNetVersionForWebsite: 'v4.0'
                    PipeLineModeForWebsite: 'Integrated'
                    AddBinding: true
                    Bindings: |
                      {
                          bindings: [
                            {
                              "protocol":"http",
                              "ipAddress":"*",
                              "hostname":"$(HostName)",
                              "port":"80",
                              "sslThumbprint":"",
                              "sniFlag":false
                            },
                            {
                              "protocol":"https",
                              "ipAddress":"*",
                              "hostname":"$(HostName)",
                              "port":"443",
                              "sslThumbprint":"$(CertThumbprint)",
                              "sniFlag":true
                            }
                          ]
                      }
                    CreateOrUpdateAppPoolForWebsite: true
                    AppPoolNameForWebsite: '$(IISSiteName)'

                - task: replacetokens@3
                  displayName: 'Replace tokens in **/*.SetParameters.xml'
                  inputs:
                    targetFiles: '$(Pipeline.Workspace)/drop/NetFrameworkDeployIIS.SetParameters.xml'
                    escapeType: none

                - task: IISWebAppDeploymentOnMachineGroup@0
                  displayName: 'IIS Web App Deploy'
                  inputs:
                    WebSiteName: '$(IISSiteName)'
                    Package: '$(Pipeline.Workspace)/drop/NetFrameworkDeployIIS.zip'
                    TakeAppOfflineFlag: true
                    SetParametersFile: '$(Pipeline.Workspace)/drop/NetFrameworkDeployIIS.SetParameters.xml'
                    XmlVariableSubstitution: true